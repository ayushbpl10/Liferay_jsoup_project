/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lake.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the lakes service. Represents a row in the &quot;sample_lakes&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.lake.model.impl.lakesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.lake.model.impl.lakesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see lakes
 * @see com.lake.model.impl.lakesImpl
 * @see com.lake.model.impl.lakesModelImpl
 * @generated
 */
@ProviderType
public interface lakesModel extends BaseModel<lakes> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a lakes model instance should use the {@link lakes} interface instead.
	 */

	/**
	 * Returns the primary key of this lakes.
	 *
	 * @return the primary key of this lakes
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this lakes.
	 *
	 * @param primaryKey the primary key of this lakes
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the lakeid of this lakes.
	 *
	 * @return the lakeid of this lakes
	 */
	public int getLakeid();

	/**
	 * Sets the lakeid of this lakes.
	 *
	 * @param lakeid the lakeid of this lakes
	 */
	public void setLakeid(int lakeid);

	/**
	 * Returns the name of this lakes.
	 *
	 * @return the name of this lakes
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this lakes.
	 *
	 * @param name the name of this lakes
	 */
	public void setName(String name);

	/**
	 * Returns the url of this lakes.
	 *
	 * @return the url of this lakes
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this lakes.
	 *
	 * @param url the url of this lakes
	 */
	public void setUrl(String url);

	/**
	 * Returns the jan of this lakes.
	 *
	 * @return the jan of this lakes
	 */
	public double getJan();

	/**
	 * Sets the jan of this lakes.
	 *
	 * @param jan the jan of this lakes
	 */
	public void setJan(double jan);

	/**
	 * Returns the feb of this lakes.
	 *
	 * @return the feb of this lakes
	 */
	public double getFeb();

	/**
	 * Sets the feb of this lakes.
	 *
	 * @param feb the feb of this lakes
	 */
	public void setFeb(double feb);

	/**
	 * Returns the mar of this lakes.
	 *
	 * @return the mar of this lakes
	 */
	public double getMar();

	/**
	 * Sets the mar of this lakes.
	 *
	 * @param mar the mar of this lakes
	 */
	public void setMar(double mar);

	/**
	 * Returns the apr of this lakes.
	 *
	 * @return the apr of this lakes
	 */
	public double getApr();

	/**
	 * Sets the apr of this lakes.
	 *
	 * @param apr the apr of this lakes
	 */
	public void setApr(double apr);

	/**
	 * Returns the may of this lakes.
	 *
	 * @return the may of this lakes
	 */
	public double getMay();

	/**
	 * Sets the may of this lakes.
	 *
	 * @param may the may of this lakes
	 */
	public void setMay(double may);

	/**
	 * Returns the june of this lakes.
	 *
	 * @return the june of this lakes
	 */
	public double getJune();

	/**
	 * Sets the june of this lakes.
	 *
	 * @param june the june of this lakes
	 */
	public void setJune(double june);

	/**
	 * Returns the july of this lakes.
	 *
	 * @return the july of this lakes
	 */
	public double getJuly();

	/**
	 * Sets the july of this lakes.
	 *
	 * @param july the july of this lakes
	 */
	public void setJuly(double july);

	/**
	 * Returns the aug of this lakes.
	 *
	 * @return the aug of this lakes
	 */
	public double getAug();

	/**
	 * Sets the aug of this lakes.
	 *
	 * @param aug the aug of this lakes
	 */
	public void setAug(double aug);

	/**
	 * Returns the sep of this lakes.
	 *
	 * @return the sep of this lakes
	 */
	public double getSep();

	/**
	 * Sets the sep of this lakes.
	 *
	 * @param sep the sep of this lakes
	 */
	public void setSep(double sep);

	/**
	 * Returns the oct of this lakes.
	 *
	 * @return the oct of this lakes
	 */
	public double getOct();

	/**
	 * Sets the oct of this lakes.
	 *
	 * @param oct the oct of this lakes
	 */
	public void setOct(double oct);

	/**
	 * Returns the nov of this lakes.
	 *
	 * @return the nov of this lakes
	 */
	public double getNov();

	/**
	 * Sets the nov of this lakes.
	 *
	 * @param nov the nov of this lakes
	 */
	public void setNov(double nov);

	/**
	 * Returns the dec_ of this lakes.
	 *
	 * @return the dec_ of this lakes
	 */
	public double getDec_();

	/**
	 * Sets the dec_ of this lakes.
	 *
	 * @param dec_ the dec_ of this lakes
	 */
	public void setDec_(double dec_);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.lake.model.lakes lakes);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.lake.model.lakes> toCacheModel();

	@Override
	public com.lake.model.lakes toEscapedModel();

	@Override
	public com.lake.model.lakes toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}